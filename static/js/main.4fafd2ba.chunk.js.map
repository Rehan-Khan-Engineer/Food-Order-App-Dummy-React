{"version":3,"sources":["components/Cart/Checkout.module.css","components/Cart/Cart.module.css","components/Cart/CartItem.module.css","components/Layout/HeaderCartButton.module.css","components/UI/Modal.module.css","components/Meals/AvailableMeals.module.css","components/Meals/MealItem/MealItem.module.css","components/Layout/Header.module.css","components/UI/Card.module.css","components/UI/Input.module.css","components/Meals/MealItem/MealItemForm.module.css","components/Meals/MealsSummary.module.css","components/UI/Modal.js","store/cart-context.js","components/Cart/CartItem.js","components/Cart/Checkout.js","components/Cart/Cart.js","assests/meals.jpg","components/Layout/HeaderCartButton.js","components/Layout/Header.js","components/UI/Card.js","components/UI/Input.js","components/Meals/MealItem/MealItemForm.js","components/Meals/MealItem/MealItem.js","components/Meals/AvailableMeals.js","components/Meals/MealsSummary.js","components/Meals/Meals.js","store/CartProvider.js","App.js","index.js"],"names":["module","exports","Backdrop","props","className","classes","backdrop","onClick","onClose","ModalOverlay","modal","content","children","portalElement","document","getElementById","Modal","ReactDOM","createPortal","CartContext","React","createContext","CartItem","price","toFixed","name","summary","amount","actions","onRemove","onAdd","isEmpty","value","trim","Checkout","useState","street","postalCode","city","formIsValid","setFormIsValid","nameInputRef","useRef","streetInputRef","postalCodeInputRef","cityInputRef","nameClasses","control","invalid","streetClasses","postalCodeClasses","cityClasses","form","onSubmit","event","preventDefault","enteredName","current","enteredStreet","enteredPostalCode","enteredCity","nameValidity","streetValidity","postalCodeValidity","length","cityValidity","onConfirm","htmlFor","type","id","ref","error","onCancel","submit","Cart","isCheckout","setIsCheckout","isSubmitting","setIsSubmitting","doneSubmitting","setDonesubmitting","cartCtx","useContext","totalAmount","hasItems","items","cartItemRemoveHandler","removeItem","cartItemAddHandler","item","addItem","submitOrderHandler","userData","fetch","method","body","JSON","stringify","user","orderedItems","headers","response","json","data","console","log","clearCart","cartItems","map","element","bind","modalActions","button","total","HeaderCartButton","btnIsHighlighted","setBtnIsHighlighted","numberOfCartItems","reduce","prevValue","curValue","useEffect","timer","setTimeout","clearTimeout","btnClasses","bump","icon","badge","Header","header","src","mealsImage","alt","Card","card","Input","forwardRef","input","label","MealItemForm","amountIsValid","setAmountIsValid","amountInputRef","enteredAmount","enteredAmountNumber","onAddToCart","min","max","step","defaultValue","MealItem","meal","description","AvailableMeals","meals","setMeals","isLoading","setIsLoading","httpError","setHttpError","fetchMeals","ok","Error","key","responseData","loadedMeals","push","catch","message","MealsLoading","MealsError","mealsList","MealsSummary","Meals","defaultCartState","cartReducer","prevState","action","updatedItems","updatedTotalAmount","existingCartItemIndex","findIndex","existingCartItem","updatedItem","concat","existingItem","filter","CartProvider","useReducer","cartState","dispatchCartAction","cartContext","Provider","App","cartIsShown","setCartIsShown","createRoot","render"],"mappings":"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","file":"static/js/main.4fafd2ba.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Checkout_form__2ju2-\",\"control\":\"Checkout_control__1uXi1\",\"actions\":\"Checkout_actions__2xvH_\",\"submit\":\"Checkout_submit__2JG_F\",\"invalid\":\"Checkout_invalid__7QY_8\",\"error\":\"Checkout_error__3m36v\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cart-items\":\"Cart_cart-items__gsaTq\",\"total\":\"Cart_total__3V4ZL\",\"actions\":\"Cart_actions__vpJpR\",\"button--alt\":\"Cart_button--alt__2Gnn1\",\"button\":\"Cart_button__34QVQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cart-item\":\"CartItem_cart-item__3OQeg\",\"summary\":\"CartItem_summary__1S98l\",\"price\":\"CartItem_price__3aqmq\",\"amount\":\"CartItem_amount__33_Sr\",\"actions\":\"CartItem_actions__1aP65\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"HeaderCartButton_button__1taem\",\"icon\":\"HeaderCartButton_icon__A0yr2\",\"badge\":\"HeaderCartButton_badge__wzQgx\",\"bump\":\"HeaderCartButton_bump__1h6h6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"backdrop\":\"Modal_backdrop__5vVaw\",\"modal\":\"Modal_modal__1b1-a\",\"slide-down\":\"Modal_slide-down__2r_ry\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"meals\":\"AvailableMeals_meals__2unLi\",\"meals-appear\":\"AvailableMeals_meals-appear__2TdFZ\",\"MealsLoading\":\"AvailableMeals_MealsLoading__2Oy44\",\"MealsError\":\"AvailableMeals_MealsError__2JwFr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"meal\":\"MealItem_meal__2xhku\",\"description\":\"MealItem_description__kCCYP\",\"price\":\"MealItem_price__1t0ut\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__293dP\",\"main-image\":\"Header_main-image__1P2Mg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__3x54u\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Input_input__2ZLXZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"MealItemForm_form__2lP6n\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"summary\":\"MealsSummary_summary__3zQbq\"};","import { Fragment } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport classes from \"./Modal.module.css\";\r\n\r\nconst Backdrop = (props) => {\r\n  return <div className={classes.backdrop} onClick={props.onClose} />;\r\n};\r\n\r\nconst ModalOverlay = (props) => {\r\n  return (\r\n    <div className={classes.modal}>\r\n      <div className={classes.content}>{props.children}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\n//following is how we will write if not using portals.\r\n// <Fragment>\r\n//   <Backdrop />\r\n//   <ModalOverlay>{props.children}</ModalOverlay>\r\n// </Fragment>\r\n//when using portal write like following\r\n\r\nconst portalElement = document.getElementById(\"overlays\");\r\n\r\nconst Modal = (props) => {\r\n  return (\r\n    <Fragment>\r\n      {ReactDOM.createPortal(\r\n        <Backdrop onClose={props.onClose} />,\r\n        portalElement\r\n      )}\r\n      {ReactDOM.createPortal(\r\n        <ModalOverlay>{props.children}</ModalOverlay>,\r\n        portalElement\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n","import React from \"react\";\r\n\r\nconst CartContext = React.createContext();\r\n\r\nexport default CartContext;\r\n","import classes from './CartItem.module.css';\r\n\r\nconst CartItem = (props) => {\r\n  const price = `$${props.price.toFixed(2)}`;\r\n\r\n  return (\r\n    <li className={classes['cart-item']}>\r\n      <div>\r\n        <h2>{props.name}</h2>\r\n        <div className={classes.summary}>\r\n          <span className={classes.price}>{price}</span>\r\n          <span className={classes.amount}>x {props.amount}</span>\r\n        </div>\r\n      </div>\r\n      <div className={classes.actions}>\r\n        <button onClick={props.onRemove}>−</button>\r\n        <button onClick={props.onAdd}>+</button>\r\n      </div>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default CartItem;\r\n","import { useRef, useState } from \"react\";\r\nimport classes from \"./Checkout.module.css\";\r\n\r\n//following 2 are helper funcs for validation\r\nconst isEmpty = (value) => value.trim() === \"\";\r\nconst isFourChars = (chars) => chars.trim().length === 4;\r\n\r\nconst Checkout = (props) => {\r\n  const [formIsValid, setFormIsValid] = useState({\r\n    name: true,\r\n    street: true,\r\n    postalCode: true,\r\n    city: true,\r\n  });\r\n\r\n  const nameInputRef = useRef();\r\n  const streetInputRef = useRef();\r\n  const postalCodeInputRef = useRef();\r\n  const cityInputRef = useRef();\r\n\r\n  const confirmHandler = (event) => {\r\n    event.preventDefault();\r\n\r\n    const enteredName = nameInputRef.current.value;\r\n    const enteredStreet = streetInputRef.current.value;\r\n    const enteredPostalCode = postalCodeInputRef.current.value;\r\n    const enteredCity = cityInputRef.current.value;\r\n\r\n    const nameValidity = !isEmpty(enteredName);\r\n    const streetValidity = !isEmpty(enteredStreet);\r\n    const postalCodeValidity = isFourChars(enteredPostalCode);\r\n    const cityValidity = !isEmpty(enteredCity);\r\n\r\n    setFormIsValid({\r\n      name: nameValidity,\r\n      street: streetValidity,\r\n      postalCode: postalCodeValidity,\r\n      city: cityValidity,\r\n    });\r\n\r\n    //validation of order form\r\n    const formIsValid =\r\n      nameValidity && streetValidity && postalCodeValidity && cityValidity;\r\n\r\n    if (!formIsValid) {\r\n      return;\r\n    }\r\n\r\n    //passing user Entered Data to cart.js\r\n    props.onConfirm({\r\n      name: enteredName,\r\n      street: enteredStreet,\r\n      postalCode: enteredPostalCode,\r\n      city: enteredCity,\r\n    });\r\n  };\r\n\r\n  const nameClasses = `${classes.control} ${\r\n    !formIsValid.name ? classes.invalid : \"\"\r\n  }`;\r\n\r\n  const streetClasses = `${classes.control} ${\r\n    !formIsValid.street ? classes.invalid : \"\"\r\n  }`;\r\n  const postalCodeClasses = `${classes.control} ${\r\n    !formIsValid.postalCode ? classes.invalid : \"\"\r\n  }`;\r\n  const cityClasses = `${classes.control} ${\r\n    !formIsValid.city ? classes.invalid : \"\"\r\n  }`;\r\n\r\n  return (\r\n    <form className={classes.form} onSubmit={confirmHandler}>\r\n      <div className={nameClasses}>\r\n        <label htmlFor=\"name\">Your Name</label>\r\n        <input type=\"text\" id=\"name\" ref={nameInputRef} />\r\n        {!formIsValid.name && (\r\n          <p className={classes.error}>Please enter a valid Name!</p>\r\n        )}\r\n      </div>\r\n      <div className={streetClasses}>\r\n        <label htmlFor=\"street\">Street</label>\r\n        <input type=\"text\" id=\"street\" ref={streetInputRef} />\r\n        {!formIsValid.street && (\r\n          <p className={classes.error}>Please enter a valid Street!</p>\r\n        )}\r\n      </div>\r\n      <div className={postalCodeClasses}>\r\n        <label htmlFor=\"postal\">Postal Code</label>\r\n        <input type=\"text\" id=\"postal\" ref={postalCodeInputRef} />\r\n        {!formIsValid.postalCode && (\r\n          <p className={classes.error}>Please enter a 4-digit postal code!</p>\r\n        )}\r\n      </div>\r\n      <div className={cityClasses}>\r\n        <label htmlFor=\"city\">City</label>\r\n        <input type=\"text\" id=\"city\" ref={cityInputRef} />\r\n        {!formIsValid.city && (\r\n          <p className={classes.error}>Please enter a valid City!</p>\r\n        )}\r\n      </div>\r\n      <div className={classes.actions}>\r\n        <button type=\"button\" onClick={props.onCancel}>\r\n          Cancel\r\n        </button>\r\n        <button className={classes.submit}>Confirm</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Checkout;\r\n","import classes from \"./Cart.module.css\";\r\nimport Modal from \"../UI/Modal\";\r\nimport { Fragment, useContext, useState } from \"react\";\r\nimport CartContext from \"../../store/cart-context\";\r\nimport CartItem from \"./CartItem\";\r\nimport Checkout from \"./Checkout\";\r\nimport React from \"react\";\r\n\r\nconst Cart = (props) => {\r\n  const [isCheckout, setIsCheckout] = useState(false);\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n  const [doneSubmitting, setDonesubmitting] = useState(false);\r\n\r\n  const cartCtx = useContext(CartContext);\r\n  const totalAmount = `$${cartCtx.totalAmount.toFixed(2)}`;\r\n  const hasItems = cartCtx.items.length > 0; //to hide order btn if cart is empty\r\n\r\n  const cartItemRemoveHandler = (id) => {\r\n    cartCtx.removeItem(id);\r\n  };\r\n\r\n  const cartItemAddHandler = (item) => {\r\n    cartCtx.addItem({ ...item, amount: 1 });\r\n  };\r\n\r\n  const checkoutHandler = () => {\r\n    setIsCheckout(true);\r\n  };\r\n\r\n  const submitOrderHandler = async (userData) => {\r\n    setIsSubmitting(true);\r\n    const response = await fetch(\r\n      \"https://food-order-app-1807c-default-rtdb.firebaseio.com/orders.json\",\r\n      {\r\n        method: \"POST\",\r\n        //we dont just want to send userData but user choosen cart data as well to the server\r\n        body: JSON.stringify({\r\n          user: userData,\r\n          orderedItems: cartCtx.items,\r\n        }),\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      }\r\n    );\r\n\r\n    const data = await response.json();\r\n    console.log(data);\r\n\r\n    setIsSubmitting(false);\r\n    setDonesubmitting(true);\r\n    cartCtx.clearCart();\r\n  };\r\n\r\n  const cartItems = (\r\n    <ul className={classes[\"cart-items\"]}>\r\n      {cartCtx.items.map((element) => (\r\n        <CartItem\r\n          key={element.id}\r\n          name={element.name}\r\n          amount={element.amount}\r\n          price={element.price}\r\n          onAdd={cartItemAddHandler.bind(null, element)}\r\n          onRemove={cartItemRemoveHandler.bind(null, element.id)}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n\r\n  const modalActions = (\r\n    <div className={classes.actions}>\r\n      <button className={classes[\"button--alt\"]} onClick={props.onClose}>\r\n        Close\r\n      </button>\r\n      {hasItems && (\r\n        <button className={classes.button} onClick={checkoutHandler}>\r\n          Order\r\n        </button>\r\n      )}\r\n    </div>\r\n  );\r\n\r\n  if (isSubmitting) {\r\n    return (\r\n      <Modal>\r\n        <p>Sending order...</p>\r\n      </Modal>\r\n    );\r\n  }\r\n\r\n  if (doneSubmitting) {\r\n    return (\r\n      <Modal onClose={props.onClose}>\r\n        <Fragment>\r\n          <p>Order Submitted Succesfully.</p>\r\n          <div className={classes.actions}>\r\n            <button className={classes.button} onClick={props.onClose}>\r\n              Close\r\n            </button>\r\n          </div>\r\n        </Fragment>\r\n      </Modal>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Modal onClose={props.onClose}>\r\n      {cartItems}\r\n      <div className={classes.total}>\r\n        <span>Total Amount</span>\r\n        <span>{totalAmount}</span>\r\n      </div>\r\n      {isCheckout && (\r\n        <Checkout onConfirm={submitOrderHandler} onCancel={props.onClose} />\r\n      )}\r\n      {!isCheckout && modalActions}\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default Cart;\r\n","export default __webpack_public_path__ + \"static/media/meals.2971f633.jpg\";","import classes from \"./HeaderCartButton.module.css\";\r\nimport { FaCartPlus } from \"react-icons/fa\";\r\nimport { useContext, useEffect, useState } from \"react\";\r\nimport CartContext from \"../../store/cart-context\";\r\n\r\n//the cart button in header contains cart icon,cart text and current items number\r\n//badge.\r\nconst HeaderCartButton = (props) => {\r\n  const [btnIsHighlighted, setBtnIsHighlighted] = useState(false);\r\n  const cartCtx = useContext(CartContext);\r\n\r\n  const numberOfCartItems = cartCtx.items.reduce((prevValue, curValue) => {\r\n    return prevValue + curValue.amount;\r\n  }, 0);\r\n\r\n  //useEffect() hook is used here to play bump animation on botton whenever\r\n  // numberOfCartItems changes\r\n\r\n  useEffect(() => {\r\n    //following if check makes sure no anim is played if cart is empty\r\n    if (cartCtx.items.length === 0) {\r\n      return;\r\n    }\r\n\r\n    setBtnIsHighlighted(true);\r\n\r\n    //following timer removes bump class which makes it possible for btn to bump\r\n    //whenever user clicks +Add button(because it(bump class) gets added again)\r\n    const timer = setTimeout(() => {\r\n      setBtnIsHighlighted(false);\r\n    }, 300);\r\n\r\n    //following cleanup function removes any old timer and makes sure our timer\r\n    //starts new whenever button is clicked.\r\n    return () => {\r\n      clearTimeout(timer);\r\n    };\r\n  }, [cartCtx.items]);\r\n\r\n  const btnClasses = `${classes.button} ${btnIsHighlighted && classes.bump}`;\r\n\r\n  return (\r\n    <button className={btnClasses} onClick={props.onClick}>\r\n      <span className={classes.icon}>\r\n        <FaCartPlus />\r\n      </span>\r\n      <span>Your Cart</span>\r\n      <span className={classes.badge}>{numberOfCartItems}</span>\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default HeaderCartButton;\r\n","import { Fragment } from \"react\";\r\nimport classes from \"./Header.module.css\";\r\nimport mealsImage from \"../../assests/meals.jpg\";\r\nimport HeaderCartButton from \"./HeaderCartButton\";\r\n\r\n//header component contains header (project name and headerCartButton)  and image\r\nconst Header = (props) => {\r\n  return (\r\n    <Fragment>\r\n      <header className={classes.header}>\r\n        <h1>Khan Meals </h1>\r\n        <HeaderCartButton onClick={props.onClick} />\r\n      </header>\r\n      <div className={classes[\"main-image\"]}>\r\n        <img src={mealsImage} alt=\"A table full of delicious food!\" />\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import classes from \"./Card.module.css\";\r\n\r\nconst Card = (props) => {\r\n  return <div className={classes.card}>{props.children}</div>;\r\n};\r\n\r\nexport default Card;\r\n","import classes from \"./Input.module.css\";\r\nimport React from \"react\";\r\n\r\nconst Input = React.forwardRef((props, ref) => {\r\n  //{...props.input} makes sure that all the key-value pair in input object is\r\n  // added as attribute in input element.\r\n  return (\r\n    <div className={classes.input}>\r\n      <label htmlFor={props.input.id}>{props.label}</label>\r\n      <input ref={ref} {...props.input} />\r\n    </div>\r\n  );\r\n});\r\nexport default Input;\r\n","import Input from \"../../UI/Input\";\r\nimport classes from \"./MealItemForm.module.css\";\r\nimport { useRef, useState } from \"react\";\r\n\r\nconst MealItemForm = (props) => {\r\n  const [amountIsValid, setAmountIsValid] = useState(true);\r\n  const amountInputRef = useRef();\r\n\r\n  const submitHandler = (event) => {\r\n    event.preventDefault(); //reloading the page is prevented\r\n    const enteredAmount = amountInputRef.current.value;\r\n    const enteredAmountNumber = +enteredAmount; //converting string num to num num\r\n    if (\r\n      enteredAmount.trim().length === 0 ||\r\n      enteredAmountNumber < 1 ||\r\n      enteredAmountNumber > 5\r\n    ) {\r\n      setAmountIsValid(false);\r\n      return;\r\n    }\r\n\r\n    props.onAddToCart(enteredAmountNumber); //forwarding user input data to other\r\n    //component (here it is MealItem.js)\r\n  };\r\n\r\n  //the input component below is custom and reusable and saved in UI folder\r\n  //in the input component below we are adding built in attributes like step, min,\r\n  //max etc. in the form of object pair, only to pass it to  <input {...props.input} />\r\n  //there these attributes will be effective as they are built in input attributes\r\n  //applied on built in html input element there!\r\n  return (\r\n    <form className={classes.form} onSubmit={submitHandler}>\r\n      <Input\r\n        ref={amountInputRef}\r\n        label=\"Amount\"\r\n        input={{\r\n          id: \"amount_\" + props.id, //this creates a unique id per input item\r\n          type: \"number\",\r\n          min: \"1\",\r\n          max: \"5\",\r\n          step: \"1\",\r\n          defaultValue: \"1\",\r\n        }}\r\n      />\r\n      <button>+ Add</button>\r\n      {!amountIsValid && <p>Please enter a valid amount(1-5).</p>}\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default MealItemForm;\r\n","import classes from \"./MealItem.module.css\";\r\nimport MealItemForm from \"./MealItemForm\";\r\nimport { useContext } from \"react\";\r\nimport CartContext from \"../../../store/cart-context\";\r\n\r\nconst MealItem = (props) => {\r\n  const cartCtx = useContext(CartContext);\r\n\r\n  const price = `$${props.price.toFixed(2)}`;\r\n\r\n  const addToCartHandler = (amount) => {\r\n    cartCtx.addItem({\r\n      //passing this data to context and then to reducer\r\n      // to update the state (thereby adding cart item  to cart list)\r\n      id: props.id,\r\n      name: props.name,\r\n      price: props.price,\r\n      amount: amount,\r\n    });\r\n  };\r\n\r\n  //the following first div contains left side section of meal item\r\n  //the following second div contains right side input/form section of meal\r\n  //item\r\n  return (\r\n    <li className={classes.meal}>\r\n      <div>\r\n        <h3>{props.name}</h3>\r\n        <div className={classes.description}>{props.description}</div>\r\n        <div className={classes.price}>{price}</div>\r\n      </div>\r\n\r\n      <div>\r\n        <MealItemForm id={props.id} onAddToCart={addToCartHandler} />\r\n      </div>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default MealItem;\r\n","import { useEffect, useState } from \"react\";\r\nimport Card from \"../UI/Card\";\r\nimport classes from \"./AvailableMeals.module.css\";\r\nimport MealItem from \"./MealItem/MealItem\";\r\n\r\n// const DUMMY_MEALS = [\r\n//   {\r\n//     id: \"m1\",\r\n//     name: \"Sushi\",\r\n//     description: \"Finest fish and veggies\",\r\n//     price: 22.99,\r\n//   },\r\n//   {\r\n//     id: \"m2\",\r\n//     name: \"Schnitzel\",\r\n//     description: \"A german specialty!\",\r\n//     price: 16.5,\r\n//   },\r\n//   {\r\n//     id: \"m3\",\r\n//     name: \"Barbecue Burger\",\r\n//     description: \"American, raw, meaty\",\r\n//     price: 12.99,\r\n//   },\r\n//   {\r\n//     id: \"m4\",\r\n//     name: \"Green Bowl\",\r\n//     description: \"Healthy...and green...\",\r\n//     price: 18.99,\r\n//   },\r\n// ];\r\n\r\n//fetching available meals data from firebase\r\nconst AvailableMeals = (props) => {\r\n  const [meals, setMeals] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [httpError, setHttpError] = useState();\r\n\r\n  useEffect(() => {\r\n    const fetchMeals = async () => {\r\n      setIsLoading(true);\r\n\r\n      const response = await fetch(\r\n        \"https://food-order-app-1807c-default-rtdb.firebaseio.com/meals.json\"\r\n      );\r\n\r\n      if (!response.ok) {\r\n        throw new Error(\"Something went wrong!\");\r\n      }\r\n\r\n      const responseData = await response.json();\r\n\r\n      const loadedMeals = [];\r\n\r\n      for (const key in responseData) {\r\n        loadedMeals.push({\r\n          id: key,\r\n          name: responseData[key].name,\r\n          description: responseData[key].description,\r\n          price: responseData[key].price,\r\n        });\r\n      }\r\n      setMeals(loadedMeals);\r\n      setIsLoading(false);\r\n    };\r\n\r\n    fetchMeals().catch((error) => {\r\n      setHttpError(error.message);\r\n      setIsLoading(false);\r\n    });\r\n  }, []);\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <section className={classes.MealsLoading}>\r\n        <p>Loading...</p>\r\n      </section>\r\n    );\r\n  }\r\n\r\n  if (httpError) {\r\n    return (\r\n      <section className={classes.MealsError}>\r\n        <p>{httpError}</p>\r\n      </section>\r\n    );\r\n  }\r\n\r\n  const mealsList = meals.map((element) => {\r\n    return (\r\n      <MealItem\r\n        id={element.id}\r\n        key={element.id}\r\n        name={element.name}\r\n        description={element.description}\r\n        price={element.price}\r\n      />\r\n    );\r\n  });\r\n\r\n  return (\r\n    <section className={classes.meals}>\r\n      <Card>\r\n        <ul>{mealsList}</ul>\r\n      </Card>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default AvailableMeals;\r\n","import classes from \"./MealsSummary.module.css\";\r\n\r\nconst MealsSummary = () => {\r\n  return (\r\n    <section className={classes.summary}>\r\n      <h2>Delicious Food, Delivered To You</h2>\r\n      <p>\r\n        Choose your favorite meal from our broad selection of available meals\r\n        and enjoy a delicious lunch or dinner at home.\r\n      </p>\r\n      <p>\r\n        All our meals are cooked with high-quality ingredients, just-in-time and\r\n        of course by experienced chefs!\r\n      </p>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default MealsSummary;\r\n","import { Fragment } from \"react\";\r\nimport AvailableMeals from \"./AvailableMeals\";\r\nimport MealsSummary from \"./MealsSummary\";\r\n\r\nconst Meals = () => {\r\n  return (\r\n    <Fragment>\r\n      <MealsSummary></MealsSummary>\r\n      <AvailableMeals></AvailableMeals>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Meals;\r\n","import CartContext from \"./cart-context\";\r\nimport { useReducer } from \"react\";\r\n\r\nconst defaultCartState = {\r\n  items: [],\r\n  totalAmount: 0,\r\n};\r\n\r\n//reducer function is added outside of component\r\nconst cartReducer = (prevState, action) => {\r\n  if (action.type === \"ADD\") {\r\n    const updatedTotalAmount =\r\n      prevState.totalAmount + action.item.price * action.item.amount;\r\n\r\n    const existingCartItemIndex = prevState.items.findIndex((element) => {\r\n      return element.id === action.item.id;\r\n      //action.item.id is the item we are trying to add because user clicked\r\n      //on +Add of this item only\r\n    });\r\n\r\n    const existingCartItem = prevState.items[existingCartItemIndex];\r\n\r\n    let updatedItems;\r\n\r\n    //following if check is to see if item already exists, if it does then overwrite\r\n    //amount value.\r\n    if (existingCartItem) {\r\n      let updatedItem = {\r\n        ...existingCartItem,\r\n        amount: existingCartItem.amount + action.item.amount,\r\n      };\r\n\r\n      updatedItems = [...prevState.items];\r\n      updatedItems[existingCartItemIndex] = updatedItem;\r\n    } else {\r\n      updatedItems = prevState.items.concat(action.item);\r\n    }\r\n\r\n    return {\r\n      items: updatedItems,\r\n      totalAmount: updatedTotalAmount,\r\n    };\r\n  }\r\n\r\n  if (action.type === \"REMOVE\") {\r\n    const existingCartItemIndex = prevState.items.findIndex((element) => {\r\n      return element.id === action.id;\r\n    });\r\n\r\n    const existingItem = prevState.items[existingCartItemIndex];\r\n\r\n    const updatedTotalAmount = prevState.totalAmount - existingItem.price;\r\n\r\n    let updatedItems;\r\n\r\n    if (existingItem.amount === 1) {\r\n      updatedItems = prevState.items.filter(\r\n        (element) => element.id !== action.id\r\n      );\r\n    } else {\r\n      const updatedItem = { ...existingItem, amount: existingItem.amount - 1 };\r\n      updatedItems = [...prevState.items];\r\n      updatedItems[existingCartItemIndex] = updatedItem;\r\n    }\r\n\r\n    return {\r\n      items: updatedItems,\r\n      totalAmount: updatedTotalAmount,\r\n    };\r\n  }\r\n\r\n  if (action.type === \"CLEAR\") {\r\n    return defaultCartState;\r\n  }\r\n\r\n  return defaultCartState;\r\n};\r\n\r\nconst CartProvider = (props) => {\r\n  const [cartState, dispatchCartAction] = useReducer(\r\n    cartReducer,\r\n    defaultCartState\r\n  );\r\n\r\n  const addItemToCartHandler = (item) => {\r\n    dispatchCartAction({ type: \"ADD\", item: item });\r\n  };\r\n\r\n  const removeItemFromCartHandler = (id) => {\r\n    dispatchCartAction({ type: \"REMOVE\", id: id });\r\n  };\r\n\r\n  const clearCartHandler = () => {\r\n    dispatchCartAction({ type: \"CLEAR\" });\r\n  };\r\n\r\n  //the following object is set as value to context provider\r\n  const cartContext = {\r\n    items: cartState.items,\r\n    totalAmount: cartState.totalAmount,\r\n    addItem: addItemToCartHandler,\r\n    removeItem: removeItemFromCartHandler,\r\n    clearCart: clearCartHandler,\r\n  };\r\n\r\n  return (\r\n    <CartContext.Provider value={cartContext}>\r\n      {props.children}\r\n    </CartContext.Provider>\r\n  );\r\n};\r\n\r\nexport default CartProvider;\r\n","import { useState } from \"react\";\r\nimport Cart from \"./components/Cart/Cart\";\r\nimport Header from \"./components/Layout/Header\";\r\nimport Meals from \"./components/Meals/Meals\";\r\nimport CartProvider from \"./store/CartProvider\";\r\n\r\nfunction App() {\r\n  const [cartIsShown, setCartIsShown] = useState(false);\r\n\r\n  const showCartHandler = () => {\r\n    setCartIsShown(true);\r\n  };\r\n\r\n  const hideCartHandler = () => {\r\n    setCartIsShown(false);\r\n  };\r\n  return (\r\n    <CartProvider>\r\n      {cartIsShown && <Cart onClose={hideCartHandler} />}\r\n      <Header onClick={showCartHandler} />\r\n      <main>\r\n        <Meals />\r\n      </main>\r\n    </CartProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import ReactDOM from 'react-dom/client';\r\n\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(<App />);\r\n"],"sourceRoot":""}